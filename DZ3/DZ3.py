# задание 1 - честно очень долго ломал голову
# надеялся что есть встроенный метод работы с индексом в списке

""" lst = [2, 3, 5, 9, 3]
sum = 0
index = 1
for i in lst:
    if index % 2 == 0:
        sum += i
        index += 1
    else:
        index += 1

print(sum) """

################################################################

# задание 2 - не самое короткое решение, но работает

""" lst = [2, 3, 4, 5, 6]
l = len(lst) // 2
if len(lst) % 2 != 0:
    l += 1
an = []
index1 = 0
index2 = -1
mes = 0
for i in range(l):
    mes = lst[index1] * lst[index2]
    an.append(mes)
    index1 += 1
    index2 -= 1
print(an) """

##################################################################
# задание 3 - работает, но при попытке убрать знаки после запятой
# в переменной dif происходит  округление, поэтому оставил как есть

'''lst = [1.1, 1.2, 3.1, 5, 10.01]
lst2 = []
for i in lst:
    a = int(i) - i 
    #print ('%.2f' % a) - сугубо для проверки чисел
    lst2.append(a)
dif = max(lst2) - min(lst2)    
print (dif)'''

##################################################################

# задание 4 - перевод в бинарное число через рекурсию

'''def dec_bin(n):
    if n >= 2:
        dec_bin(n // 2)
    print(n % 2, end='')
dec_bin(45) '''


#################################################################

# задание 5 - признаюсь,  скопировал часть из инета, и знаю что 
# использование рекурсии для вычисления больших чисел не хорошо.
# но на небольших очень даже красиво получается ))))

'''k = int(input('введите число: '))


def fibo(k):
    if k < 0:
        if (-k <= -1):
            return k
        else:
            return (fibo(-k+1) - fibo(-k+2))
    else:
        if (k <= 1):
            return k
        else:
            return (fibo(k-1) + fibo(k-2))


for i in range(-k, k+1):
    print(fibo(i), end=" ")'''
